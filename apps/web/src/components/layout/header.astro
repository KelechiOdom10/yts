---
import { IconAlignmentCenter } from "justd-icons";
import { siteConfig } from "@yts/shared";

import { Button } from "../ui";
import AuthMenu from "./auth-menu.astro";
import { Skeleton } from "../ui";
import Logo from "./logo.astro";

// Get the current path to highlight active navigation items
console.log({ url: Astro.url });
const currentPath = Astro.url.pathname;

console.log({ currentPath });

// Navigation items for the header
const navItems = [
  { name: "Features", href: "/#features" },
  { name: "Pricing", href: "/pricing" },
  { name: "Explore", href: "/explore" },
  { name: "Contact", href: `mailto:${siteConfig.email}` },
];
---

<header
  class="fixed top-4 left-0 right-0 max-w-7xl mx-4 xl:mx-auto z-50 rounded-sm md:rounded-full shadow-md bg-white/80 pr-3 py-2.5 pl-5 border backdrop-blur-2xl"
>
  <div class="flex justify-between">
    <div class="flex">
      <div class="flex-shrink-0 flex items-center">
        <Logo />
      </div>
      <nav class="hidden md:ml-8 md:flex md:space-x-6">
        {
          navItems.map(item => (
            <a
              href={item.href}
              class={`inline-flex items-center px-1 pt-1 text-sm font-medium border-b-2 transition-colors ${
                currentPath === item.href || currentPath === `${item.href}/`
                  ? "border-primary text-fg"
                  : "border-transparent text-fg hover:border-primary hover:text-fg/90"
              }`}
            >
              {item.name}
            </a>
          ))
        }
      </nav>
    </div>

    <!-- User menu and mobile menu button -->
    <div class="flex items-center gap-2">
      <AuthMenu server:defer>
        <Skeleton
          className="w-8 h-8 rounded-full"
          slot="fallback"
          client:load
        />
      </AuthMenu>
      <!-- Mobile menu button -->
      <div class="flex items-center md:hidden">
        <Button
          aria-label="Open main menu"
          className="mobile-menu-button"
          aria-expanded="false"
          size="square-petite"
          shape="square"
          variant="outline"
        >
          <IconAlignmentCenter />
        </Button>
      </div>
    </div>
  </div>

  <!-- Mobile menu, show/hide based on menu state -->
  <div class="hidden mobile-menu md:hidden">
    <div class="pt-2 pb-3 space-y-1">
      {
        navItems.map(item => (
          <a
            href={item.href}
            class={`block pl-3 pr-4 py-2 border-l-4 text-base font-medium ${
              currentPath === item.href
                ? "bg-primary-50 border-primary-500 text-primary-700"
                : "border-transparent text-fg hover:bg-primary/10 hover:border-primary"
            }`}
          >
            {item.name}
          </a>
        ))
      }
    </div>
  </div>
</header>

<script>
  // Mobile menu toggle

  const initMobileMenu = () => {
    const button = document.querySelector(".mobile-menu-button");
    const menu = document.querySelector(".mobile-menu");

    if (button && menu) {
      button.addEventListener("click", () => {
        menu.classList.toggle("hidden");

        // Update aria-expanded
        const expanded = button.getAttribute("aria-expanded") === "true";
        button.setAttribute("aria-expanded", (!expanded).toString());
      });

      // Close the mobile menu when clicking outside
      document.addEventListener("click", event => {
        if (
          button &&
          !button.contains(event.target as Node) &&
          menu &&
          !menu.contains(event.target as Node)
        ) {
          button.setAttribute("aria-expanded", "false");
          menu.classList.add("hidden");
        }
      });
    }
  };

  document.addEventListener("DOMContentLoaded", initMobileMenu);
  document.addEventListener("astro:after-swap", initMobileMenu);
</script>

<!-- Spacer to prevent content from being hidden under the fixed header -->
<div class="h-16"></div>
